{"version":3,"file":"tsMode-09e3a26c.js","sources":["../../node_modules/monaco-editor/esm/vs/language/typescript/tsMode.js"],"sourcesContent":["/*!-----------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.47.0(69991d66135e4a1fc1cf0b1ac4ad25d429866a0d)\n * Released under the MIT license\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\n *-----------------------------------------------------------------------------*/\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\n\n// src/fillers/monaco-editor-core.ts\nvar monaco_editor_core_exports = {};\n__reExport(monaco_editor_core_exports, monaco_editor_core_star);\nimport * as monaco_editor_core_star from \"../../editor/editor.api.js\";\n\n// src/language/typescript/workerManager.ts\nvar WorkerManager = class {\n  constructor(_modeId, _defaults) {\n    this._modeId = _modeId;\n    this._defaults = _defaults;\n    this._worker = null;\n    this._client = null;\n    this._configChangeListener = this._defaults.onDidChange(() => this._stopWorker());\n    this._updateExtraLibsToken = 0;\n    this._extraLibsChangeListener = this._defaults.onDidExtraLibsChange(\n      () => this._updateExtraLibs()\n    );\n  }\n  dispose() {\n    this._configChangeListener.dispose();\n    this._extraLibsChangeListener.dispose();\n    this._stopWorker();\n  }\n  _stopWorker() {\n    if (this._worker) {\n      this._worker.dispose();\n      this._worker = null;\n    }\n    this._client = null;\n  }\n  async _updateExtraLibs() {\n    if (!this._worker) {\n      return;\n    }\n    const myToken = ++this._updateExtraLibsToken;\n    const proxy = await this._worker.getProxy();\n    if (this._updateExtraLibsToken !== myToken) {\n      return;\n    }\n    proxy.updateExtraLibs(this._defaults.getExtraLibs());\n  }\n  _getClient() {\n    if (!this._client) {\n      this._client = (async () => {\n        this._worker = monaco_editor_core_exports.editor.createWebWorker({\n          // module that exports the create() method and returns a `TypeScriptWorker` instance\n          moduleId: \"vs/language/typescript/tsWorker\",\n          label: this._modeId,\n          keepIdleModels: true,\n          // passed in to the create() method\n          createData: {\n            compilerOptions: this._defaults.getCompilerOptions(),\n            extraLibs: this._defaults.getExtraLibs(),\n            customWorkerPath: this._defaults.workerOptions.customWorkerPath,\n            inlayHintsOptions: this._defaults.inlayHintsOptions\n          }\n        });\n        if (this._defaults.getEagerModelSync()) {\n          return await this._worker.withSyncedResources(\n            monaco_editor_core_exports.editor.getModels().filter((model) => model.getLanguageId() === this._modeId).map((model) => model.uri)\n          );\n        }\n        return await this._worker.getProxy();\n      })();\n    }\n    return this._client;\n  }\n  async getLanguageServiceWorker(...resources) {\n    const client = await this._getClient();\n    if (this._worker) {\n      await this._worker.withSyncedResources(resources);\n    }\n    return client;\n  }\n};\n\n// src/language/typescript/languageFeatures.ts\nimport {\n  typescriptDefaults\n} from \"./monaco.contribution.js\";\n\n// src/language/typescript/lib/lib.index.ts\nvar libFileSet = {};\nlibFileSet[\"lib.d.ts\"] = true;\nlibFileSet[\"lib.decorators.d.ts\"] = true;\nlibFileSet[\"lib.decorators.legacy.d.ts\"] = true;\nlibFileSet[\"lib.dom.d.ts\"] = true;\nlibFileSet[\"lib.dom.iterable.d.ts\"] = true;\nlibFileSet[\"lib.es2015.collection.d.ts\"] = true;\nlibFileSet[\"lib.es2015.core.d.ts\"] = true;\nlibFileSet[\"lib.es2015.d.ts\"] = true;\nlibFileSet[\"lib.es2015.generator.d.ts\"] = true;\nlibFileSet[\"lib.es2015.iterable.d.ts\"] = true;\nlibFileSet[\"lib.es2015.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2015.proxy.d.ts\"] = true;\nlibFileSet[\"lib.es2015.reflect.d.ts\"] = true;\nlibFileSet[\"lib.es2015.symbol.d.ts\"] = true;\nlibFileSet[\"lib.es2015.symbol.wellknown.d.ts\"] = true;\nlibFileSet[\"lib.es2016.array.include.d.ts\"] = true;\nlibFileSet[\"lib.es2016.d.ts\"] = true;\nlibFileSet[\"lib.es2016.full.d.ts\"] = true;\nlibFileSet[\"lib.es2017.d.ts\"] = true;\nlibFileSet[\"lib.es2017.full.d.ts\"] = true;\nlibFileSet[\"lib.es2017.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2017.object.d.ts\"] = true;\nlibFileSet[\"lib.es2017.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2017.string.d.ts\"] = true;\nlibFileSet[\"lib.es2017.typedarrays.d.ts\"] = true;\nlibFileSet[\"lib.es2018.asyncgenerator.d.ts\"] = true;\nlibFileSet[\"lib.es2018.asynciterable.d.ts\"] = true;\nlibFileSet[\"lib.es2018.d.ts\"] = true;\nlibFileSet[\"lib.es2018.full.d.ts\"] = true;\nlibFileSet[\"lib.es2018.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2018.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2018.regexp.d.ts\"] = true;\nlibFileSet[\"lib.es2019.array.d.ts\"] = true;\nlibFileSet[\"lib.es2019.d.ts\"] = true;\nlibFileSet[\"lib.es2019.full.d.ts\"] = true;\nlibFileSet[\"lib.es2019.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2019.object.d.ts\"] = true;\nlibFileSet[\"lib.es2019.string.d.ts\"] = true;\nlibFileSet[\"lib.es2019.symbol.d.ts\"] = true;\nlibFileSet[\"lib.es2020.bigint.d.ts\"] = true;\nlibFileSet[\"lib.es2020.d.ts\"] = true;\nlibFileSet[\"lib.es2020.date.d.ts\"] = true;\nlibFileSet[\"lib.es2020.full.d.ts\"] = true;\nlibFileSet[\"lib.es2020.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2020.number.d.ts\"] = true;\nlibFileSet[\"lib.es2020.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2020.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2020.string.d.ts\"] = true;\nlibFileSet[\"lib.es2020.symbol.wellknown.d.ts\"] = true;\nlibFileSet[\"lib.es2021.d.ts\"] = true;\nlibFileSet[\"lib.es2021.full.d.ts\"] = true;\nlibFileSet[\"lib.es2021.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2021.promise.d.ts\"] = true;\nlibFileSet[\"lib.es2021.string.d.ts\"] = true;\nlibFileSet[\"lib.es2021.weakref.d.ts\"] = true;\nlibFileSet[\"lib.es2022.array.d.ts\"] = true;\nlibFileSet[\"lib.es2022.d.ts\"] = true;\nlibFileSet[\"lib.es2022.error.d.ts\"] = true;\nlibFileSet[\"lib.es2022.full.d.ts\"] = true;\nlibFileSet[\"lib.es2022.intl.d.ts\"] = true;\nlibFileSet[\"lib.es2022.object.d.ts\"] = true;\nlibFileSet[\"lib.es2022.regexp.d.ts\"] = true;\nlibFileSet[\"lib.es2022.sharedmemory.d.ts\"] = true;\nlibFileSet[\"lib.es2022.string.d.ts\"] = true;\nlibFileSet[\"lib.es2023.array.d.ts\"] = true;\nlibFileSet[\"lib.es2023.d.ts\"] = true;\nlibFileSet[\"lib.es2023.full.d.ts\"] = true;\nlibFileSet[\"lib.es5.d.ts\"] = true;\nlibFileSet[\"lib.es6.d.ts\"] = true;\nlibFileSet[\"lib.esnext.d.ts\"] = true;\nlibFileSet[\"lib.esnext.full.d.ts\"] = true;\nlibFileSet[\"lib.esnext.intl.d.ts\"] = true;\nlibFileSet[\"lib.scripthost.d.ts\"] = true;\nlibFileSet[\"lib.webworker.d.ts\"] = true;\nlibFileSet[\"lib.webworker.importscripts.d.ts\"] = true;\nlibFileSet[\"lib.webworker.iterable.d.ts\"] = true;\n\n// src/language/typescript/languageFeatures.ts\nfunction flattenDiagnosticMessageText(diag, newLine, indent = 0) {\n  if (typeof diag === \"string\") {\n    return diag;\n  } else if (diag === void 0) {\n    return \"\";\n  }\n  let result = \"\";\n  if (indent) {\n    result += newLine;\n    for (let i = 0; i < indent; i++) {\n      result += \"  \";\n    }\n  }\n  result += diag.messageText;\n  indent++;\n  if (diag.next) {\n    for (const kid of diag.next) {\n      result += flattenDiagnosticMessageText(kid, newLine, indent);\n    }\n  }\n  return result;\n}\nfunction displayPartsToString(displayParts) {\n  if (displayParts) {\n    return displayParts.map((displayPart) => displayPart.text).join(\"\");\n  }\n  return \"\";\n}\nvar Adapter = class {\n  constructor(_worker) {\n    this._worker = _worker;\n  }\n  // protected _positionToOffset(model: editor.ITextModel, position: monaco.IPosition): number {\n  // \treturn model.getOffsetAt(position);\n  // }\n  // protected _offsetToPosition(model: editor.ITextModel, offset: number): monaco.IPosition {\n  // \treturn model.getPositionAt(offset);\n  // }\n  _textSpanToRange(model, span) {\n    let p1 = model.getPositionAt(span.start);\n    let p2 = model.getPositionAt(span.start + span.length);\n    let { lineNumber: startLineNumber, column: startColumn } = p1;\n    let { lineNumber: endLineNumber, column: endColumn } = p2;\n    return { startLineNumber, startColumn, endLineNumber, endColumn };\n  }\n};\nvar LibFiles = class {\n  constructor(_worker) {\n    this._worker = _worker;\n    this._libFiles = {};\n    this._hasFetchedLibFiles = false;\n    this._fetchLibFilesPromise = null;\n  }\n  isLibFile(uri) {\n    if (!uri) {\n      return false;\n    }\n    if (uri.path.indexOf(\"/lib.\") === 0) {\n      return !!libFileSet[uri.path.slice(1)];\n    }\n    return false;\n  }\n  getOrCreateModel(fileName) {\n    const uri = monaco_editor_core_exports.Uri.parse(fileName);\n    const model = monaco_editor_core_exports.editor.getModel(uri);\n    if (model) {\n      return model;\n    }\n    if (this.isLibFile(uri) && this._hasFetchedLibFiles) {\n      return monaco_editor_core_exports.editor.createModel(this._libFiles[uri.path.slice(1)], \"typescript\", uri);\n    }\n    const matchedLibFile = typescriptDefaults.getExtraLibs()[fileName];\n    if (matchedLibFile) {\n      return monaco_editor_core_exports.editor.createModel(matchedLibFile.content, \"typescript\", uri);\n    }\n    return null;\n  }\n  _containsLibFile(uris) {\n    for (let uri of uris) {\n      if (this.isLibFile(uri)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  async fetchLibFilesIfNecessary(uris) {\n    if (!this._containsLibFile(uris)) {\n      return;\n    }\n    await this._fetchLibFiles();\n  }\n  _fetchLibFiles() {\n    if (!this._fetchLibFilesPromise) {\n      this._fetchLibFilesPromise = this._worker().then((w) => w.getLibFiles()).then((libFiles) => {\n        this._hasFetchedLibFiles = true;\n        this._libFiles = libFiles;\n      });\n    }\n    return this._fetchLibFilesPromise;\n  }\n};\nvar DiagnosticsAdapter = class extends Adapter {\n  constructor(_libFiles, _defaults, _selector, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n    this._defaults = _defaults;\n    this._selector = _selector;\n    this._disposables = [];\n    this._listener = /* @__PURE__ */ Object.create(null);\n    const onModelAdd = (model) => {\n      if (model.getLanguageId() !== _selector) {\n        return;\n      }\n      const maybeValidate = () => {\n        const { onlyVisible } = this._defaults.getDiagnosticsOptions();\n        if (onlyVisible) {\n          if (model.isAttachedToEditor()) {\n            this._doValidate(model);\n          }\n        } else {\n          this._doValidate(model);\n        }\n      };\n      let handle;\n      const changeSubscription = model.onDidChangeContent(() => {\n        clearTimeout(handle);\n        handle = window.setTimeout(maybeValidate, 500);\n      });\n      const visibleSubscription = model.onDidChangeAttached(() => {\n        const { onlyVisible } = this._defaults.getDiagnosticsOptions();\n        if (onlyVisible) {\n          if (model.isAttachedToEditor()) {\n            maybeValidate();\n          } else {\n            monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, []);\n          }\n        }\n      });\n      this._listener[model.uri.toString()] = {\n        dispose() {\n          changeSubscription.dispose();\n          visibleSubscription.dispose();\n          clearTimeout(handle);\n        }\n      };\n      maybeValidate();\n    };\n    const onModelRemoved = (model) => {\n      monaco_editor_core_exports.editor.setModelMarkers(model, this._selector, []);\n      const key = model.uri.toString();\n      if (this._listener[key]) {\n        this._listener[key].dispose();\n        delete this._listener[key];\n      }\n    };\n    this._disposables.push(\n      monaco_editor_core_exports.editor.onDidCreateModel((model) => onModelAdd(model))\n    );\n    this._disposables.push(monaco_editor_core_exports.editor.onWillDisposeModel(onModelRemoved));\n    this._disposables.push(\n      monaco_editor_core_exports.editor.onDidChangeModelLanguage((event) => {\n        onModelRemoved(event.model);\n        onModelAdd(event.model);\n      })\n    );\n    this._disposables.push({\n      dispose() {\n        for (const model of monaco_editor_core_exports.editor.getModels()) {\n          onModelRemoved(model);\n        }\n      }\n    });\n    const recomputeDiagostics = () => {\n      for (const model of monaco_editor_core_exports.editor.getModels()) {\n        onModelRemoved(model);\n        onModelAdd(model);\n      }\n    };\n    this._disposables.push(this._defaults.onDidChange(recomputeDiagostics));\n    this._disposables.push(this._defaults.onDidExtraLibsChange(recomputeDiagostics));\n    monaco_editor_core_exports.editor.getModels().forEach((model) => onModelAdd(model));\n  }\n  dispose() {\n    this._disposables.forEach((d) => d && d.dispose());\n    this._disposables = [];\n  }\n  async _doValidate(model) {\n    const worker = await this._worker(model.uri);\n    if (model.isDisposed()) {\n      return;\n    }\n    const promises = [];\n    const { noSyntaxValidation, noSemanticValidation, noSuggestionDiagnostics } = this._defaults.getDiagnosticsOptions();\n    if (!noSyntaxValidation) {\n      promises.push(worker.getSyntacticDiagnostics(model.uri.toString()));\n    }\n    if (!noSemanticValidation) {\n      promises.push(worker.getSemanticDiagnostics(model.uri.toString()));\n    }\n    if (!noSuggestionDiagnostics) {\n      promises.push(worker.getSuggestionDiagnostics(model.uri.toString()));\n    }\n    const allDiagnostics = await Promise.all(promises);\n    if (!allDiagnostics || model.isDisposed()) {\n      return;\n    }\n    const diagnostics = allDiagnostics.reduce((p, c) => c.concat(p), []).filter(\n      (d) => (this._defaults.getDiagnosticsOptions().diagnosticCodesToIgnore || []).indexOf(d.code) === -1\n    );\n    const relatedUris = diagnostics.map((d) => d.relatedInformation || []).reduce((p, c) => c.concat(p), []).map(\n      (relatedInformation) => relatedInformation.file ? monaco_editor_core_exports.Uri.parse(relatedInformation.file.fileName) : null\n    );\n    await this._libFiles.fetchLibFilesIfNecessary(relatedUris);\n    if (model.isDisposed()) {\n      return;\n    }\n    monaco_editor_core_exports.editor.setModelMarkers(\n      model,\n      this._selector,\n      diagnostics.map((d) => this._convertDiagnostics(model, d))\n    );\n  }\n  _convertDiagnostics(model, diag) {\n    const diagStart = diag.start || 0;\n    const diagLength = diag.length || 1;\n    const { lineNumber: startLineNumber, column: startColumn } = model.getPositionAt(diagStart);\n    const { lineNumber: endLineNumber, column: endColumn } = model.getPositionAt(\n      diagStart + diagLength\n    );\n    const tags = [];\n    if (diag.reportsUnnecessary) {\n      tags.push(monaco_editor_core_exports.MarkerTag.Unnecessary);\n    }\n    if (diag.reportsDeprecated) {\n      tags.push(monaco_editor_core_exports.MarkerTag.Deprecated);\n    }\n    return {\n      severity: this._tsDiagnosticCategoryToMarkerSeverity(diag.category),\n      startLineNumber,\n      startColumn,\n      endLineNumber,\n      endColumn,\n      message: flattenDiagnosticMessageText(diag.messageText, \"\\n\"),\n      code: diag.code.toString(),\n      tags,\n      relatedInformation: this._convertRelatedInformation(model, diag.relatedInformation)\n    };\n  }\n  _convertRelatedInformation(model, relatedInformation) {\n    if (!relatedInformation) {\n      return [];\n    }\n    const result = [];\n    relatedInformation.forEach((info) => {\n      let relatedResource = model;\n      if (info.file) {\n        relatedResource = this._libFiles.getOrCreateModel(info.file.fileName);\n      }\n      if (!relatedResource) {\n        return;\n      }\n      const infoStart = info.start || 0;\n      const infoLength = info.length || 1;\n      const { lineNumber: startLineNumber, column: startColumn } = relatedResource.getPositionAt(infoStart);\n      const { lineNumber: endLineNumber, column: endColumn } = relatedResource.getPositionAt(\n        infoStart + infoLength\n      );\n      result.push({\n        resource: relatedResource.uri,\n        startLineNumber,\n        startColumn,\n        endLineNumber,\n        endColumn,\n        message: flattenDiagnosticMessageText(info.messageText, \"\\n\")\n      });\n    });\n    return result;\n  }\n  _tsDiagnosticCategoryToMarkerSeverity(category) {\n    switch (category) {\n      case 1 /* Error */:\n        return monaco_editor_core_exports.MarkerSeverity.Error;\n      case 3 /* Message */:\n        return monaco_editor_core_exports.MarkerSeverity.Info;\n      case 0 /* Warning */:\n        return monaco_editor_core_exports.MarkerSeverity.Warning;\n      case 2 /* Suggestion */:\n        return monaco_editor_core_exports.MarkerSeverity.Hint;\n    }\n    return monaco_editor_core_exports.MarkerSeverity.Info;\n  }\n};\nvar SuggestAdapter = class _SuggestAdapter extends Adapter {\n  get triggerCharacters() {\n    return [\".\"];\n  }\n  async provideCompletionItems(model, position, _context, token) {\n    const wordInfo = model.getWordUntilPosition(position);\n    const wordRange = new monaco_editor_core_exports.Range(\n      position.lineNumber,\n      wordInfo.startColumn,\n      position.lineNumber,\n      wordInfo.endColumn\n    );\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getCompletionsAtPosition(resource.toString(), offset);\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const suggestions = info.entries.map((entry) => {\n      let range = wordRange;\n      if (entry.replacementSpan) {\n        const p1 = model.getPositionAt(entry.replacementSpan.start);\n        const p2 = model.getPositionAt(entry.replacementSpan.start + entry.replacementSpan.length);\n        range = new monaco_editor_core_exports.Range(p1.lineNumber, p1.column, p2.lineNumber, p2.column);\n      }\n      const tags = [];\n      if (entry.kindModifiers !== void 0 && entry.kindModifiers.indexOf(\"deprecated\") !== -1) {\n        tags.push(monaco_editor_core_exports.languages.CompletionItemTag.Deprecated);\n      }\n      return {\n        uri: resource,\n        position,\n        offset,\n        range,\n        label: entry.name,\n        insertText: entry.name,\n        sortText: entry.sortText,\n        kind: _SuggestAdapter.convertKind(entry.kind),\n        tags\n      };\n    });\n    return {\n      suggestions\n    };\n  }\n  async resolveCompletionItem(item, token) {\n    const myItem = item;\n    const resource = myItem.uri;\n    const position = myItem.position;\n    const offset = myItem.offset;\n    const worker = await this._worker(resource);\n    const details = await worker.getCompletionEntryDetails(\n      resource.toString(),\n      offset,\n      myItem.label\n    );\n    if (!details) {\n      return myItem;\n    }\n    return {\n      uri: resource,\n      position,\n      label: details.name,\n      kind: _SuggestAdapter.convertKind(details.kind),\n      detail: displayPartsToString(details.displayParts),\n      documentation: {\n        value: _SuggestAdapter.createDocumentationString(details)\n      }\n    };\n  }\n  static convertKind(kind) {\n    switch (kind) {\n      case Kind.primitiveType:\n      case Kind.keyword:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Keyword;\n      case Kind.variable:\n      case Kind.localVariable:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Variable;\n      case Kind.memberVariable:\n      case Kind.memberGetAccessor:\n      case Kind.memberSetAccessor:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Field;\n      case Kind.function:\n      case Kind.memberFunction:\n      case Kind.constructSignature:\n      case Kind.callSignature:\n      case Kind.indexSignature:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Function;\n      case Kind.enum:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Enum;\n      case Kind.module:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Module;\n      case Kind.class:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Class;\n      case Kind.interface:\n        return monaco_editor_core_exports.languages.CompletionItemKind.Interface;\n      case Kind.warning:\n        return monaco_editor_core_exports.languages.CompletionItemKind.File;\n    }\n    return monaco_editor_core_exports.languages.CompletionItemKind.Property;\n  }\n  static createDocumentationString(details) {\n    let documentationString = displayPartsToString(details.documentation);\n    if (details.tags) {\n      for (const tag of details.tags) {\n        documentationString += `\n\n${tagToString(tag)}`;\n      }\n    }\n    return documentationString;\n  }\n};\nfunction tagToString(tag) {\n  let tagLabel = `*@${tag.name}*`;\n  if (tag.name === \"param\" && tag.text) {\n    const [paramName, ...rest] = tag.text;\n    tagLabel += `\\`${paramName.text}\\``;\n    if (rest.length > 0)\n      tagLabel += ` \\u2014 ${rest.map((r) => r.text).join(\" \")}`;\n  } else if (Array.isArray(tag.text)) {\n    tagLabel += ` \\u2014 ${tag.text.map((r) => r.text).join(\" \")}`;\n  } else if (tag.text) {\n    tagLabel += ` \\u2014 ${tag.text}`;\n  }\n  return tagLabel;\n}\nvar SignatureHelpAdapter = class _SignatureHelpAdapter extends Adapter {\n  constructor() {\n    super(...arguments);\n    this.signatureHelpTriggerCharacters = [\"(\", \",\"];\n  }\n  static _toSignatureHelpTriggerReason(context) {\n    switch (context.triggerKind) {\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.TriggerCharacter:\n        if (context.triggerCharacter) {\n          if (context.isRetrigger) {\n            return { kind: \"retrigger\", triggerCharacter: context.triggerCharacter };\n          } else {\n            return { kind: \"characterTyped\", triggerCharacter: context.triggerCharacter };\n          }\n        } else {\n          return { kind: \"invoked\" };\n        }\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.ContentChange:\n        return context.isRetrigger ? { kind: \"retrigger\" } : { kind: \"invoked\" };\n      case monaco_editor_core_exports.languages.SignatureHelpTriggerKind.Invoke:\n      default:\n        return { kind: \"invoked\" };\n    }\n  }\n  async provideSignatureHelp(model, position, token, context) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getSignatureHelpItems(resource.toString(), offset, {\n      triggerReason: _SignatureHelpAdapter._toSignatureHelpTriggerReason(context)\n    });\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const ret = {\n      activeSignature: info.selectedItemIndex,\n      activeParameter: info.argumentIndex,\n      signatures: []\n    };\n    info.items.forEach((item) => {\n      const signature = {\n        label: \"\",\n        parameters: []\n      };\n      signature.documentation = {\n        value: displayPartsToString(item.documentation)\n      };\n      signature.label += displayPartsToString(item.prefixDisplayParts);\n      item.parameters.forEach((p, i, a) => {\n        const label = displayPartsToString(p.displayParts);\n        const parameter = {\n          label,\n          documentation: {\n            value: displayPartsToString(p.documentation)\n          }\n        };\n        signature.label += label;\n        signature.parameters.push(parameter);\n        if (i < a.length - 1) {\n          signature.label += displayPartsToString(item.separatorDisplayParts);\n        }\n      });\n      signature.label += displayPartsToString(item.suffixDisplayParts);\n      ret.signatures.push(signature);\n    });\n    return {\n      value: ret,\n      dispose() {\n      }\n    };\n  }\n};\nvar QuickInfoAdapter = class extends Adapter {\n  async provideHover(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const info = await worker.getQuickInfoAtPosition(resource.toString(), offset);\n    if (!info || model.isDisposed()) {\n      return;\n    }\n    const documentation = displayPartsToString(info.documentation);\n    const tags = info.tags ? info.tags.map((tag) => tagToString(tag)).join(\"  \\n\\n\") : \"\";\n    const contents = displayPartsToString(info.displayParts);\n    return {\n      range: this._textSpanToRange(model, info.textSpan),\n      contents: [\n        {\n          value: \"```typescript\\n\" + contents + \"\\n```\\n\"\n        },\n        {\n          value: documentation + (tags ? \"\\n\\n\" + tags : \"\")\n        }\n      ]\n    };\n  }\n};\nvar DocumentHighlightAdapter = class extends Adapter {\n  async provideDocumentHighlights(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getDocumentHighlights(resource.toString(), offset, [\n      resource.toString()\n    ]);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    return entries.flatMap((entry) => {\n      return entry.highlightSpans.map((highlightSpans) => {\n        return {\n          range: this._textSpanToRange(model, highlightSpans.textSpan),\n          kind: highlightSpans.kind === \"writtenReference\" ? monaco_editor_core_exports.languages.DocumentHighlightKind.Write : monaco_editor_core_exports.languages.DocumentHighlightKind.Text\n        };\n      });\n    });\n  }\n};\nvar DefinitionAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideDefinition(model, position, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getDefinitionAtPosition(resource.toString(), offset);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    await this._libFiles.fetchLibFilesIfNecessary(\n      entries.map((entry) => monaco_editor_core_exports.Uri.parse(entry.fileName))\n    );\n    if (model.isDisposed()) {\n      return;\n    }\n    const result = [];\n    for (let entry of entries) {\n      const refModel = this._libFiles.getOrCreateModel(entry.fileName);\n      if (refModel) {\n        result.push({\n          uri: refModel.uri,\n          range: this._textSpanToRange(refModel, entry.textSpan)\n        });\n      }\n    }\n    return result;\n  }\n};\nvar ReferenceAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideReferences(model, position, context, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const entries = await worker.getReferencesAtPosition(resource.toString(), offset);\n    if (!entries || model.isDisposed()) {\n      return;\n    }\n    await this._libFiles.fetchLibFilesIfNecessary(\n      entries.map((entry) => monaco_editor_core_exports.Uri.parse(entry.fileName))\n    );\n    if (model.isDisposed()) {\n      return;\n    }\n    const result = [];\n    for (let entry of entries) {\n      const refModel = this._libFiles.getOrCreateModel(entry.fileName);\n      if (refModel) {\n        result.push({\n          uri: refModel.uri,\n          range: this._textSpanToRange(refModel, entry.textSpan)\n        });\n      }\n    }\n    return result;\n  }\n};\nvar OutlineAdapter = class extends Adapter {\n  async provideDocumentSymbols(model, token) {\n    const resource = model.uri;\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const root = await worker.getNavigationTree(resource.toString());\n    if (!root || model.isDisposed()) {\n      return;\n    }\n    const convert = (item, containerLabel) => {\n      const result2 = {\n        name: item.text,\n        detail: \"\",\n        kind: outlineTypeTable[item.kind] || monaco_editor_core_exports.languages.SymbolKind.Variable,\n        range: this._textSpanToRange(model, item.spans[0]),\n        selectionRange: this._textSpanToRange(model, item.spans[0]),\n        tags: [],\n        children: item.childItems?.map((child) => convert(child, item.text)),\n        containerName: containerLabel\n      };\n      return result2;\n    };\n    const result = root.childItems ? root.childItems.map((item) => convert(item)) : [];\n    return result;\n  }\n};\nvar Kind = class {\n  static {\n    this.unknown = \"\";\n  }\n  static {\n    this.keyword = \"keyword\";\n  }\n  static {\n    this.script = \"script\";\n  }\n  static {\n    this.module = \"module\";\n  }\n  static {\n    this.class = \"class\";\n  }\n  static {\n    this.interface = \"interface\";\n  }\n  static {\n    this.type = \"type\";\n  }\n  static {\n    this.enum = \"enum\";\n  }\n  static {\n    this.variable = \"var\";\n  }\n  static {\n    this.localVariable = \"local var\";\n  }\n  static {\n    this.function = \"function\";\n  }\n  static {\n    this.localFunction = \"local function\";\n  }\n  static {\n    this.memberFunction = \"method\";\n  }\n  static {\n    this.memberGetAccessor = \"getter\";\n  }\n  static {\n    this.memberSetAccessor = \"setter\";\n  }\n  static {\n    this.memberVariable = \"property\";\n  }\n  static {\n    this.constructorImplementation = \"constructor\";\n  }\n  static {\n    this.callSignature = \"call\";\n  }\n  static {\n    this.indexSignature = \"index\";\n  }\n  static {\n    this.constructSignature = \"construct\";\n  }\n  static {\n    this.parameter = \"parameter\";\n  }\n  static {\n    this.typeParameter = \"type parameter\";\n  }\n  static {\n    this.primitiveType = \"primitive type\";\n  }\n  static {\n    this.label = \"label\";\n  }\n  static {\n    this.alias = \"alias\";\n  }\n  static {\n    this.const = \"const\";\n  }\n  static {\n    this.let = \"let\";\n  }\n  static {\n    this.warning = \"warning\";\n  }\n};\nvar outlineTypeTable = /* @__PURE__ */ Object.create(null);\noutlineTypeTable[Kind.module] = monaco_editor_core_exports.languages.SymbolKind.Module;\noutlineTypeTable[Kind.class] = monaco_editor_core_exports.languages.SymbolKind.Class;\noutlineTypeTable[Kind.enum] = monaco_editor_core_exports.languages.SymbolKind.Enum;\noutlineTypeTable[Kind.interface] = monaco_editor_core_exports.languages.SymbolKind.Interface;\noutlineTypeTable[Kind.memberFunction] = monaco_editor_core_exports.languages.SymbolKind.Method;\noutlineTypeTable[Kind.memberVariable] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberGetAccessor] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.memberSetAccessor] = monaco_editor_core_exports.languages.SymbolKind.Property;\noutlineTypeTable[Kind.variable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.const] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.localVariable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.variable] = monaco_editor_core_exports.languages.SymbolKind.Variable;\noutlineTypeTable[Kind.function] = monaco_editor_core_exports.languages.SymbolKind.Function;\noutlineTypeTable[Kind.localFunction] = monaco_editor_core_exports.languages.SymbolKind.Function;\nvar FormatHelper = class extends Adapter {\n  static _convertOptions(options) {\n    return {\n      ConvertTabsToSpaces: options.insertSpaces,\n      TabSize: options.tabSize,\n      IndentSize: options.tabSize,\n      IndentStyle: 2 /* Smart */,\n      NewLineCharacter: \"\\n\",\n      InsertSpaceAfterCommaDelimiter: true,\n      InsertSpaceAfterSemicolonInForStatements: true,\n      InsertSpaceBeforeAndAfterBinaryOperators: true,\n      InsertSpaceAfterKeywordsInControlFlowStatements: true,\n      InsertSpaceAfterFunctionKeywordForAnonymousFunctions: true,\n      InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis: false,\n      InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets: false,\n      InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces: false,\n      PlaceOpenBraceOnNewLineForControlBlocks: false,\n      PlaceOpenBraceOnNewLineForFunctions: false\n    };\n  }\n  _convertTextChanges(model, change) {\n    return {\n      text: change.newText,\n      range: this._textSpanToRange(model, change.span)\n    };\n  }\n};\nvar FormatAdapter = class extends FormatHelper {\n  constructor() {\n    super(...arguments);\n    this.canFormatMultipleRanges = false;\n  }\n  async provideDocumentRangeFormattingEdits(model, range, options, token) {\n    const resource = model.uri;\n    const startOffset = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const endOffset = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const edits = await worker.getFormattingEditsForRange(\n      resource.toString(),\n      startOffset,\n      endOffset,\n      FormatHelper._convertOptions(options)\n    );\n    if (!edits || model.isDisposed()) {\n      return;\n    }\n    return edits.map((edit) => this._convertTextChanges(model, edit));\n  }\n};\nvar FormatOnTypeAdapter = class extends FormatHelper {\n  get autoFormatTriggerCharacters() {\n    return [\";\", \"}\", \"\\n\"];\n  }\n  async provideOnTypeFormattingEdits(model, position, ch, options, token) {\n    const resource = model.uri;\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const edits = await worker.getFormattingEditsAfterKeystroke(\n      resource.toString(),\n      offset,\n      ch,\n      FormatHelper._convertOptions(options)\n    );\n    if (!edits || model.isDisposed()) {\n      return;\n    }\n    return edits.map((edit) => this._convertTextChanges(model, edit));\n  }\n};\nvar CodeActionAdaptor = class extends FormatHelper {\n  async provideCodeActions(model, range, context, token) {\n    const resource = model.uri;\n    const start = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const end = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const formatOptions = FormatHelper._convertOptions(model.getOptions());\n    const errorCodes = context.markers.filter((m) => m.code).map((m) => m.code).map(Number);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const codeFixes = await worker.getCodeFixesAtPosition(\n      resource.toString(),\n      start,\n      end,\n      errorCodes,\n      formatOptions\n    );\n    if (!codeFixes || model.isDisposed()) {\n      return { actions: [], dispose: () => {\n      } };\n    }\n    const actions = codeFixes.filter((fix) => {\n      return fix.changes.filter((change) => change.isNewFile).length === 0;\n    }).map((fix) => {\n      return this._tsCodeFixActionToMonacoCodeAction(model, context, fix);\n    });\n    return {\n      actions,\n      dispose: () => {\n      }\n    };\n  }\n  _tsCodeFixActionToMonacoCodeAction(model, context, codeFix) {\n    const edits = [];\n    for (const change of codeFix.changes) {\n      for (const textChange of change.textChanges) {\n        edits.push({\n          resource: model.uri,\n          versionId: void 0,\n          textEdit: {\n            range: this._textSpanToRange(model, textChange.span),\n            text: textChange.newText\n          }\n        });\n      }\n    }\n    const action = {\n      title: codeFix.description,\n      edit: { edits },\n      diagnostics: context.markers,\n      kind: \"quickfix\"\n    };\n    return action;\n  }\n};\nvar RenameAdapter = class extends Adapter {\n  constructor(_libFiles, worker) {\n    super(worker);\n    this._libFiles = _libFiles;\n  }\n  async provideRenameEdits(model, position, newName, token) {\n    const resource = model.uri;\n    const fileName = resource.toString();\n    const offset = model.getOffsetAt(position);\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return;\n    }\n    const renameInfo = await worker.getRenameInfo(fileName, offset, {\n      allowRenameOfImportPath: false\n    });\n    if (renameInfo.canRename === false) {\n      return {\n        edits: [],\n        rejectReason: renameInfo.localizedErrorMessage\n      };\n    }\n    if (renameInfo.fileToRename !== void 0) {\n      throw new Error(\"Renaming files is not supported.\");\n    }\n    const renameLocations = await worker.findRenameLocations(\n      fileName,\n      offset,\n      /*strings*/\n      false,\n      /*comments*/\n      false,\n      /*prefixAndSuffix*/\n      false\n    );\n    if (!renameLocations || model.isDisposed()) {\n      return;\n    }\n    const edits = [];\n    for (const renameLocation of renameLocations) {\n      const model2 = this._libFiles.getOrCreateModel(renameLocation.fileName);\n      if (model2) {\n        edits.push({\n          resource: model2.uri,\n          versionId: void 0,\n          textEdit: {\n            range: this._textSpanToRange(model2, renameLocation.textSpan),\n            text: newName\n          }\n        });\n      } else {\n        throw new Error(`Unknown file ${renameLocation.fileName}.`);\n      }\n    }\n    return { edits };\n  }\n};\nvar InlayHintsAdapter = class extends Adapter {\n  async provideInlayHints(model, range, token) {\n    const resource = model.uri;\n    const fileName = resource.toString();\n    const start = model.getOffsetAt({\n      lineNumber: range.startLineNumber,\n      column: range.startColumn\n    });\n    const end = model.getOffsetAt({\n      lineNumber: range.endLineNumber,\n      column: range.endColumn\n    });\n    const worker = await this._worker(resource);\n    if (model.isDisposed()) {\n      return null;\n    }\n    const tsHints = await worker.provideInlayHints(fileName, start, end);\n    const hints = tsHints.map((hint) => {\n      return {\n        ...hint,\n        label: hint.text,\n        position: model.getPositionAt(hint.position),\n        kind: this._convertHintKind(hint.kind)\n      };\n    });\n    return { hints, dispose: () => {\n    } };\n  }\n  _convertHintKind(kind) {\n    switch (kind) {\n      case \"Parameter\":\n        return monaco_editor_core_exports.languages.InlayHintKind.Parameter;\n      case \"Type\":\n        return monaco_editor_core_exports.languages.InlayHintKind.Type;\n      default:\n        return monaco_editor_core_exports.languages.InlayHintKind.Type;\n    }\n  }\n};\n\n// src/language/typescript/tsMode.ts\nvar javaScriptWorker;\nvar typeScriptWorker;\nfunction setupTypeScript(defaults) {\n  typeScriptWorker = setupMode(defaults, \"typescript\");\n}\nfunction setupJavaScript(defaults) {\n  javaScriptWorker = setupMode(defaults, \"javascript\");\n}\nfunction getJavaScriptWorker() {\n  return new Promise((resolve, reject) => {\n    if (!javaScriptWorker) {\n      return reject(\"JavaScript not registered!\");\n    }\n    resolve(javaScriptWorker);\n  });\n}\nfunction getTypeScriptWorker() {\n  return new Promise((resolve, reject) => {\n    if (!typeScriptWorker) {\n      return reject(\"TypeScript not registered!\");\n    }\n    resolve(typeScriptWorker);\n  });\n}\nfunction setupMode(defaults, modeId) {\n  const disposables = [];\n  const providers = [];\n  const client = new WorkerManager(modeId, defaults);\n  disposables.push(client);\n  const worker = (...uris) => {\n    return client.getLanguageServiceWorker(...uris);\n  };\n  const libFiles = new LibFiles(worker);\n  function registerProviders() {\n    const { modeConfiguration } = defaults;\n    disposeAll(providers);\n    if (modeConfiguration.completionItems) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerCompletionItemProvider(\n          modeId,\n          new SuggestAdapter(worker)\n        )\n      );\n    }\n    if (modeConfiguration.signatureHelp) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerSignatureHelpProvider(\n          modeId,\n          new SignatureHelpAdapter(worker)\n        )\n      );\n    }\n    if (modeConfiguration.hovers) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerHoverProvider(modeId, new QuickInfoAdapter(worker))\n      );\n    }\n    if (modeConfiguration.documentHighlights) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerDocumentHighlightProvider(\n          modeId,\n          new DocumentHighlightAdapter(worker)\n        )\n      );\n    }\n    if (modeConfiguration.definitions) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerDefinitionProvider(\n          modeId,\n          new DefinitionAdapter(libFiles, worker)\n        )\n      );\n    }\n    if (modeConfiguration.references) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerReferenceProvider(\n          modeId,\n          new ReferenceAdapter(libFiles, worker)\n        )\n      );\n    }\n    if (modeConfiguration.documentSymbols) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerDocumentSymbolProvider(\n          modeId,\n          new OutlineAdapter(worker)\n        )\n      );\n    }\n    if (modeConfiguration.rename) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerRenameProvider(\n          modeId,\n          new RenameAdapter(libFiles, worker)\n        )\n      );\n    }\n    if (modeConfiguration.documentRangeFormattingEdits) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerDocumentRangeFormattingEditProvider(\n          modeId,\n          new FormatAdapter(worker)\n        )\n      );\n    }\n    if (modeConfiguration.onTypeFormattingEdits) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerOnTypeFormattingEditProvider(\n          modeId,\n          new FormatOnTypeAdapter(worker)\n        )\n      );\n    }\n    if (modeConfiguration.codeActions) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerCodeActionProvider(modeId, new CodeActionAdaptor(worker))\n      );\n    }\n    if (modeConfiguration.inlayHints) {\n      providers.push(\n        monaco_editor_core_exports.languages.registerInlayHintsProvider(modeId, new InlayHintsAdapter(worker))\n      );\n    }\n    if (modeConfiguration.diagnostics) {\n      providers.push(new DiagnosticsAdapter(libFiles, defaults, modeId, worker));\n    }\n  }\n  registerProviders();\n  disposables.push(asDisposable(providers));\n  return worker;\n}\nfunction asDisposable(disposables) {\n  return { dispose: () => disposeAll(disposables) };\n}\nfunction disposeAll(disposables) {\n  while (disposables.length) {\n    disposables.pop().dispose();\n  }\n}\nexport {\n  Adapter,\n  CodeActionAdaptor,\n  DefinitionAdapter,\n  DiagnosticsAdapter,\n  DocumentHighlightAdapter,\n  FormatAdapter,\n  FormatHelper,\n  FormatOnTypeAdapter,\n  InlayHintsAdapter,\n  Kind,\n  LibFiles,\n  OutlineAdapter,\n  QuickInfoAdapter,\n  ReferenceAdapter,\n  RenameAdapter,\n  SignatureHelpAdapter,\n  SuggestAdapter,\n  WorkerManager,\n  flattenDiagnosticMessageText,\n  getJavaScriptWorker,\n  getTypeScriptWorker,\n  setupJavaScript,\n  setupTypeScript\n};\n"],"names":["mod","secondTarget","__defProp","Object","defineProperty","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropNames","getOwnPropertyNames","__hasOwnProp","prototype","hasOwnProperty","__copyProps","to","from","except","desc","key","call","get","enumerable","monaco_editor_core_exports","monaco_editor_core_star","WorkerManager","constructor","_modeId","_defaults","this","_worker","_client","_configChangeListener","onDidChange","_stopWorker","_updateExtraLibsToken","_extraLibsChangeListener","onDidExtraLibsChange","_updateExtraLibs","dispose","myToken","proxy","getProxy","updateExtraLibs","getExtraLibs","_getClient","editor","createWebWorker","moduleId","label","keepIdleModels","createData","compilerOptions","getCompilerOptions","extraLibs","customWorkerPath","workerOptions","inlayHintsOptions","getEagerModelSync","withSyncedResources","getModels","filter","model","getLanguageId","map","uri","getLanguageServiceWorker","resources","client","libFileSet","flattenDiagnosticMessageText","diag","newLine","indent","result","i","messageText","next","kid","displayPartsToString","displayParts","displayPart","text","join","Adapter","_textSpanToRange","span","p1","getPositionAt","start","p2","length","lineNumber","startLineNumber","column","startColumn","endLineNumber","endColumn","LibFiles","_libFiles","_hasFetchedLibFiles","_fetchLibFilesPromise","isLibFile","path","indexOf","slice","getOrCreateModel","fileName","Uri","parse","getModel","createModel","matchedLibFile","typescriptDefaults","content","_containsLibFile","uris","fetchLibFilesIfNecessary","_fetchLibFiles","then","w","getLibFiles","libFiles","DiagnosticsAdapter","_selector","worker","super","_disposables","_listener","create","onModelAdd","maybeValidate","onlyVisible","getDiagnosticsOptions","isAttachedToEditor","_doValidate","handle","changeSubscription","onDidChangeContent","clearTimeout","window","setTimeout","visibleSubscription","onDidChangeAttached","setModelMarkers","toString","onModelRemoved","push","onDidCreateModel","onWillDisposeModel","onDidChangeModelLanguage","event","recomputeDiagostics","forEach","d","isDisposed","promises","noSyntaxValidation","noSemanticValidation","noSuggestionDiagnostics","getSyntacticDiagnostics","getSemanticDiagnostics","getSuggestionDiagnostics","allDiagnostics","Promise","all","diagnostics","reduce","p","c","concat","diagnosticCodesToIgnore","code","relatedUris","relatedInformation","file","_convertDiagnostics","diagStart","diagLength","tags","reportsUnnecessary","MarkerTag","Unnecessary","reportsDeprecated","Deprecated","severity","_tsDiagnosticCategoryToMarkerSeverity","category","message","_convertRelatedInformation","info","relatedResource","infoStart","infoLength","resource","MarkerSeverity","Error","Info","Warning","Hint","SuggestAdapter","_SuggestAdapter","triggerCharacters","provideCompletionItems","position","_context","token","wordInfo","getWordUntilPosition","wordRange","Range","offset","getOffsetAt","getCompletionsAtPosition","suggestions","entries","entry","range","replacementSpan","kindModifiers","languages","CompletionItemTag","name","insertText","sortText","kind","convertKind","resolveCompletionItem","item","myItem","details","getCompletionEntryDetails","detail","documentation","value","createDocumentationString","Kind","primitiveType","keyword","CompletionItemKind","Keyword","variable","localVariable","Variable","memberVariable","memberGetAccessor","memberSetAccessor","Field","function","memberFunction","constructSignature","callSignature","indexSignature","Function","enum","Enum","module","Module","class","Class","interface","Interface","warning","File","Property","documentationString","tag","tagToString","tagLabel","paramName","rest","r","Array","isArray","SignatureHelpAdapter","_SignatureHelpAdapter","arguments","signatureHelpTriggerCharacters","_toSignatureHelpTriggerReason","context","triggerKind","SignatureHelpTriggerKind","TriggerCharacter","triggerCharacter","isRetrigger","ContentChange","Invoke","provideSignatureHelp","getSignatureHelpItems","triggerReason","ret","activeSignature","selectedItemIndex","activeParameter","argumentIndex","signatures","items","signature","parameters","prefixDisplayParts","a","parameter","separatorDisplayParts","suffixDisplayParts","QuickInfoAdapter","provideHover","getQuickInfoAtPosition","contents","textSpan","DocumentHighlightAdapter","provideDocumentHighlights","getDocumentHighlights","flatMap","highlightSpans","DocumentHighlightKind","Write","Text","DefinitionAdapter","provideDefinition","getDefinitionAtPosition","refModel","ReferenceAdapter","provideReferences","getReferencesAtPosition","OutlineAdapter","provideDocumentSymbols","root","getNavigationTree","convert","containerLabel","outlineTypeTable","SymbolKind","spans","selectionRange","children","_a","childItems","child","containerName","unknown","script","type","localFunction","constructorImplementation","typeParameter","alias","const","let","Method","javaScriptWorker","typeScriptWorker","FormatHelper","_convertOptions","options","ConvertTabsToSpaces","insertSpaces","TabSize","tabSize","IndentSize","IndentStyle","NewLineCharacter","InsertSpaceAfterCommaDelimiter","InsertSpaceAfterSemicolonInForStatements","InsertSpaceBeforeAndAfterBinaryOperators","InsertSpaceAfterKeywordsInControlFlowStatements","InsertSpaceAfterFunctionKeywordForAnonymousFunctions","InsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis","InsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets","InsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces","PlaceOpenBraceOnNewLineForControlBlocks","PlaceOpenBraceOnNewLineForFunctions","_convertTextChanges","change","newText","FormatAdapter","canFormatMultipleRanges","provideDocumentRangeFormattingEdits","startOffset","endOffset","edits","getFormattingEditsForRange","edit","FormatOnTypeAdapter","autoFormatTriggerCharacters","provideOnTypeFormattingEdits","ch","getFormattingEditsAfterKeystroke","CodeActionAdaptor","provideCodeActions","end","formatOptions","getOptions","errorCodes","markers","m","Number","codeFixes","getCodeFixesAtPosition","actions","fix","changes","isNewFile","_tsCodeFixActionToMonacoCodeAction","codeFix","textChange","textChanges","versionId","textEdit","title","description","RenameAdapter","provideRenameEdits","newName","renameInfo","getRenameInfo","allowRenameOfImportPath","canRename","rejectReason","localizedErrorMessage","fileToRename","renameLocations","findRenameLocations","renameLocation","model2","InlayHintsAdapter","provideInlayHints","hints","hint","_convertHintKind","InlayHintKind","Parameter","Type","setupTypeScript","defaults","setupMode","setupJavaScript","getJavaScriptWorker","resolve","reject","getTypeScriptWorker","modeId","providers","modeConfiguration","disposables","pop","disposeAll","completionItems","registerCompletionItemProvider","signatureHelp","registerSignatureHelpProvider","hovers","registerHoverProvider","documentHighlights","registerDocumentHighlightProvider","definitions","registerDefinitionProvider","references","registerReferenceProvider","documentSymbols","registerDocumentSymbolProvider","rename","registerRenameProvider","documentRangeFormattingEdits","registerDocumentRangeFormattingEditProvider","onTypeFormattingEdits","registerOnTypeFormattingEditProvider","codeActions","registerCodeActionProvider","inlayHints","registerInlayHintsProvider"],"mappings":"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","x_google_ignoreList":[0]}